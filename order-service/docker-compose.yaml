version: '3.8'

services:
  order-service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=3003
    ports:
      - "3003:3003"
    networks:
      - distributed-notis
    depends_on:
      - kafka

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - distributed-notis
    volumes:
      - mongodb_data:/data/db

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - distributed-notis

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - distributed-notis
    depends_on:
      - zookeeper

volumes:
  mongodb_data:
networks:
  distributed-notis:
    external: true
