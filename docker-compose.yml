version: '3.8'

services:
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      - PORT=3001
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "3001:3001"
    networks:
      - distributed-notis
    depends_on:
      - kafka

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      - PORT=3003
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ORDER_TOPIC=order
      - MONGODB_URL=mongodb://mongodb:27017/distributednotifications
    ports:
      - "3003:3003"
    networks:
      - distributed-notis
    depends_on:
      - kafka

  notification-service1:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    environment:
      - PORT=3002
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - NOTIFICATION_TOPIC=notification
      - MONGODB_URL=mongodb://mongodb:27017/distributednotifications
      - KAFKA_CONSUMER_GROUP=notification-group-1
    ports:
      - "3002"
    networks:
      - distributed-notis
    depends_on:
      - kafka

  notification-service2:
      build:
        context: ./notification-service
        dockerfile: Dockerfile
      environment:
        - PORT=3002
        - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
        - NOTIFICATION_TOPIC=notification
        - MONGODB_URL=mongodb://mongodb:27017/distributednotifications
        - KAFKA_CONSUMER_GROUP=notification-group-2
      ports:
        - "3002"
      networks:
        - distributed-notis
      depends_on:
        - kafka

  notification-service3:
      build:
        context: ./notification-service
        dockerfile: Dockerfile
      environment:
        - PORT=3002
        - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
        - NOTIFICATION_TOPIC=notification
        - MONGODB_URL=mongodb://mongodb:27017/distributednotifications
        - KAFKA_CONSUMER_GROUP=notification-group-3
      ports:
        - "3002"
      networks:
        - distributed-notis
      depends_on:
        - kafka

  nginx:
    image: nginx:latest
    ports:
      - "3010:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - distributed-notis
    depends_on:
      - user-service
      - order-service
      - notification-service1
      - notification-service2
      - notification-service3
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=distributednotifications
    networks:
      - distributed-notis

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - distributed-notis

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - distributed-notis
    depends_on:
      - zookeeper

networks:
  distributed-notis:
    driver: bridge
